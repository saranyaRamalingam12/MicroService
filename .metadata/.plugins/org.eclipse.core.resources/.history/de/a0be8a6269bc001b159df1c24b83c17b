package com.login.serviceimplementation;

import java.util.Optional;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;

import com.login.dto.AddressDTO;
import com.login.dto.UserDTO;
import com.login.entity.Address;
import com.login.entity.User;
import com.login.repository.UserRepo;
import com.login.serviceinterface.UserService;

public class UserServiceImpl implements UserService
{

	@Autowired	UserRepo userRepository;
	@Autowired  ModelMapper modelMapper;
	
	@Override
	public Optional<User> findId(Long id) {
		return  userRepository.findById(id);
	}

	@Override
	public User checkUserNameExists(User user) {
		return userRepository.findByName(user.getName());
	}

	@Override
	public void saveUser(User user) {
		userRepository.save(user);
		
	}

	@Override
	public User mapUserDtoToUserEntity(User user, UserDTO userDTO) {
		user.setEmail(userDTO.getEmail());
		user.setPassword(userDTO.getPassword());
		user.setName(userDTO.getName());
		Address address=modelMapper.map(userDTO.getAddressDTO(), Address.class);
		user.setAddress(address);
		return user;
	}

	@Override
	public User checkUserLogin(String tempName, String tempPassword) {
		return userRepository.findByNameAndPassword(tempName, tempPassword);
	}

	@Override
	public UserDTO mapUserEntityToUserDTO(User user, UserDTO userDTO) 
	{
		try
		{
			if(user.getAddress()!=null)
			{
				AddressDTO addressDTO=modelMapper.map(user.getAddress(), AddressDTO.class);		
				userDTO.setAddressDTO(addressDTO);
			}
			userDTO.setId(user.getId());
			userDTO.setName(user.getName());
			return userDTO;
		}catch(Exception e){
			e.printStackTrace();
			return null;
		}
	}

	@Override
	public void mapAddressDTOToAddressEntity(UserDTO userDTO, Address address) {
		
		
	}

}
